{"version":3,"sources":["api.ts","default-class-names.js","components/FacetBlock/FacetBlock.tsx","components/Filters/Filters.tsx","components/ProductList/ProductsList.tsx","components/Breadcrumbs/Breadcrumbs.tsx","App.tsx","index.js"],"names":["request","url","a","fetch","res","ok","Error","json","defaultClassNames","activeTrack","disabledInputRange","inputRange","labelContainer","maxLabel","minLabel","slider","sliderContainer","track","valueLabel","FacetBlock","onPriceSelect","selectedFilters","onColorSelect","onMaterialSelect","colorCodes","facet","sixItems","values","slice","useState","itemsToRender","setItemsToRender","show6Filters","setShow6Filters","showAllFilters","setShowAllFilters","hidden","setHidden","moreOrLess","setMoreOrLess","min","max","rangeValue","setRangeValue","getColor","color","colorCode","find","name","id","backgroundImage","code","backgroundSize","backgroundColor","border","className","onClick","map","value","type","classNames","count","style","formatLabel","minValue","split","maxValue","onChange","Filters","facets","setColorCodes","useEffect","then","loadedColors","ProductsList","items","getDiscount","oldPrice","newPrice","discount","Math","round","item","href","product_url","target","rel","src","image_url","alt","compare_at","price","title","Breadcrumbs","onPriceDelete","selectedPrice","console","log","length","filter","App","setItems","setFacets","setSelectedFilters","setSelectedPrice","loadedItems","material","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67ed1cfe.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const BASE_URL = 'https://findify-assets.s3.amazonaws.com/test-task';\n\nexport const request = async (url: string) => {\n  const res = await fetch(`${BASE_URL}${url}`);\n  if (!res.ok) {\n    throw new Error(\"Couldn't load data\");\n  }\n  return await res.json();\n};\n\nexport const getData = () => {\n  return request('/test_response.json');\n};\n\nexport const getColorCodes = () => {\n  return request('/test_color_mapping.json');\n};","const defaultClassNames = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value',\n};\n\nexport default defaultClassNames;","import React, { useState } from 'react'\nimport { Facet, ColorStyle, ImageStyle, Color, selectedFacet, priceValues } from '../../types'\nimport classNames from 'classnames'\nimport InputRange from 'react-input-range'\nimport defaultClassNames from '../../default-class-names.js';\n\ninterface Props {\n  facet: Facet;\n  colorCodes: Color[];\n  onMaterialSelect: (material: string) => void;\n  onColorSelect: (color: ColorStyle | ImageStyle) => void;\n  selectedFilters: selectedFacet[];\n  onPriceSelect: (v: priceValues) => void;\n}\n\nexport const FacetBlock: React.FC<Props> = ({ onPriceSelect, selectedFilters, onColorSelect, onMaterialSelect, colorCodes, facet }) => {\n  const sixItems = facet.values.slice(0, 6);\n\n  const [ itemsToRender, setItemsToRender ] = useState(sixItems);\n  const [ show6Filters, setShow6Filters ] = useState(true);\n  const [ showAllFilters, setShowAllFilters ] = useState(false);\n  const [ hidden, setHidden ] = useState(false);\n  const [ moreOrLess, setMoreOrLess ] = useState('More');\n  const [ rangeValue, setRangeValue ] = useState({ min: 150, max: 400 });\n\n  const handleOpenButton = (): void => {\n    setHidden(false);\n    setShow6Filters(true);\n  }\n\n  const handleCloseButton = (): void => {\n    setShowAllFilters(false);\n    setHidden(true);\n    setShow6Filters(false);\n    setItemsToRender(sixItems);\n    setMoreOrLess('More');\n  }\n\n  const handleMoreButton = (): void => {\n    if (show6Filters) {\n      setShowAllFilters(true);\n      setShow6Filters(false);\n      setItemsToRender(facet.values);\n      setMoreOrLess('Less');\n    }\n    if (showAllFilters) {\n      setItemsToRender(sixItems);\n      setMoreOrLess('More');\n      setShow6Filters(true);\n      setShowAllFilters(false);\n    }\n  }\n\n  const getColor = (color: string): ColorStyle | ImageStyle => {\n    const colorCode = colorCodes.find(colorCode => color === colorCode.name) as Color;\n\n    if (color === \"Multicolor\") {\n      return { id: color, backgroundImage: `url(${colorCode.code})`, backgroundSize: \"cover\"};\n    }\n    if (color === \"White\") {\n      return { id: color, backgroundColor: colorCode.code, border: \"1px solid grey\"};\n    }\n    return { id: color, backgroundColor: colorCode.code};\n  }\n\n\n\n  return (\n    <div className=\"facet\">\n      <div className=\"facet__wrapper\" key={facet.name}>\n        <label className=\"facet__head\">\n          <div className=\"facet__name\">{facet.name}</div>\n          {hidden ? (\n            <button className=\"facet__button facet__button-open\" onClick={handleOpenButton}></button>\n          ) : (\n          <button className=\"facet__button facet__button-close\" onClick={handleCloseButton}>\n          </button>\n          )}\n        </label>\n\n        {!hidden && (\n          <div className=\"facet__options\">\n            {itemsToRender.map(value => {\n              return (\n                <div key={value.value}>\n                {facet.type === \"text\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <label className=\"facet__option-wrapper\">\n                      <button\n                        className={classNames(\"facet__box\", { 'facet__box--selected': selectedFilters.find(facet => facet.value === value.value)})}\n                        onClick={() => {\n                          onMaterialSelect(value.value);\n                        }}\n                      >\n                      </button>\n                      <div className=\"facet__value\">{value.value}</div>\n                    </label>\n                    <div className=\"facet__count\">({value.count})</div>\n                  </div>\n                }\n\n                {facet.type === \"color\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <label className=\"facet__option-wrapper\">\n                      <button\n                        style={getColor(value.value)}\n                        className={classNames(\"facet__color\", { 'facet__color--selected-color': selectedFilters.find(facet => {\n                          return typeof facet.value !== 'string' ? (facet.value).id === getColor(value.value).id : null;\n                        })})}\n                        onClick={() => onColorSelect(getColor(value.value))}\n                      >\n                      </button>\n                      <div className=\"facet__value\">{value.value}</div>\n                    </label>\n                    <div className=\"facet__count\">({value.count})</div>\n                  </div>\n                }\n\n                {facet.type === \"range\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <section className=\"range-slider\">\n                      <InputRange\n                        classNames={defaultClassNames}\n                        formatLabel={value => `$${value}`}\n                        minValue={+value.value.split('_')[0]}\n                        maxValue={+value.value.split('_')[1]}\n                        value={rangeValue}\n                        onChange={value => {\n                          return typeof value !== \"number\" &&\n                          setRangeValue({ min: value.min, max: value.max })}}\n                      />\n                      </section>\n                      <button\n                        type=\"button\"\n                        className=\"facet__go-button\"\n                        onClick={() => onPriceSelect(rangeValue)}\n                      >\n                        go\n                      </button>\n                  </div>}\n                </div>\n              )\n            })}\n            <div\n              className=\"facet__more-button\"\n              onClick={handleMoreButton}\n            >\n              <div className={classNames(\"facet__more-button-word\",\n                { \"facet__more-button-word--plus\" : moreOrLess === 'More'}\n              )}>\n                {moreOrLess}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default FacetBlock\n\n","import React, { useEffect, useState } from 'react'\nimport { getColorCodes } from '../../api'\nimport { Color, ColorStyle, Facet, ImageStyle, priceValues, selectedFacet } from '../../types'\nimport FacetBlock from '../FacetBlock/FacetBlock'\n\n\ninterface Props {\n  facets: Facet[];\n  selectedFilters: selectedFacet[],\n  onMaterialSelect: (material: string) => void;\n  onColorSelect: (color: ColorStyle | ImageStyle) => void;\n  onPriceSelect: (v: priceValues) => void;\n}\n\nexport const Filters: React.FC<Props> = ({ selectedFilters, facets, onMaterialSelect, onColorSelect, onPriceSelect }) => {\n  const [ colorCodes, setColorCodes ] = useState<Color[]>([]);\n\n  useEffect(() => {\n    getColorCodes().then(loadedColors => {\n      setColorCodes(loadedColors);\n    })\n  }, [])\n\n  return (\n    <div>\n      {facets.map(facet => <FacetBlock onPriceSelect={onPriceSelect} selectedFilters={selectedFilters} onColorSelect={onColorSelect} onMaterialSelect={onMaterialSelect} key={facet.name} colorCodes={colorCodes} facet={facet}/>)}\n    </div>\n  )\n}\n\nexport default Filters\n","import React from 'react'\nimport { Item } from '../../types'\nimport classNames from 'classnames'\nimport { getByTitle } from '@testing-library/react'\n\ninterface Props {\n  items: Item[];\n}\n\nexport const ProductsList: React.FC<Props> = ({ items }) => {\n  const getDiscount = (oldPrice: number, newPrice: number[]) => {\n    const discount = 100 - (newPrice[0]/ (oldPrice / 100));\n    return `${Math.round(discount)}% OFF`;\n  }\n  return (\n    <div className=\"ProductsList\">\n      <div className=\"ProductsList-container\">\n        <div className=\"ProductsList-wrapper\">\n          {items.map(item => (\n            <div key={item.product_url} className=\"ProductsList-card\">\n            <div className=\"ProductsList-card-wrapper\">\n              <a\n                href={item.product_url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <img src={item.image_url} alt=\"product\" className=\"ProductsList-card__image\"/>\n              </a>\n              {item.compare_at && (\n                <div>\n                  <div className=\"ProductsList-card__image-discount\">\n                    <div\n                      className=\"ProductsList-card__image-discount-number\"\n                    >\n                      {getDiscount(item.compare_at, item.price)}\n                    </div>\n                    <div className=\"ProductsList-card__image-discount-after\"></div>\n                  </div>\n                  <div className=\"ProductsList-card__image-sale\"></div>\n                </div>\n              )}\n            </div>\n              <a\n                href={item.product_url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"ProductsList-card__title\">\n                  {item.title}\n              </a>\n              <div className=\"ProductsList-card__price-info\">\n                <div className=\"ProductsList-card__old-price\">{item.compare_at && `$ ${item.compare_at}`}</div>\n                <div className=\"ProductsList-card__new-price\">$ {item.price}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductsList\n","import React from 'react'\nimport { ColorStyle, ImageStyle, selectedFacet } from '../../types'\n\ninterface Props {\n  selectedFilters: selectedFacet[],\n  onMaterialSelect: (material: string) => void;\n  onColorSelect: (color: ColorStyle | ImageStyle) => void;\n  selectedPrice: string;\n  onPriceDelete: () => void;\n}\n\nexport const Breadcrumbs: React.FC<Props> = ({ onPriceDelete, selectedPrice, onMaterialSelect, selectedFilters }) => {\n  console.log(selectedFilters)\n  return (\n    <div className=\"Breadcrumbs\">\n      {selectedPrice.length > 0 && (\n        <div className=\"Breadcrumbs__piece\">\n        <label className=\"Breadcrumbs__facet\">\n          <div className=\"Breadcrumbs__name\">{selectedPrice}</div>\n          <button\n            className=\"Breadcrumbs__button\"\n            onClick={() => onPriceDelete()}\n          >\n          </button>\n        </label>\n        <div className=\"Breadcrumbs__slash\">/</div>\n      </div>\n      )}\n      {selectedFilters.map(filter => {\n        return (\n          <div className=\"Breadcrumbs__piece-wrapper\" key={typeof filter.value !== 'string' ? filter.value.id : filter.value}>\n            {filter.type === 'material' &&\n            <div className=\"Breadcrumbs__piece\">\n              <label className=\"Breadcrumbs__facet\">\n                <div className=\"Breadcrumbs__name\">{filter.value}</div>\n                <button\n                  className=\"Breadcrumbs__button\"\n                  onClick={() => onMaterialSelect(filter.value as string)}\n                >\n                </button>\n              </label>\n              <div className=\"Breadcrumbs__slash\">/</div>\n            </div>\n\n            }\n            {filter.type === 'color' &&\n            <div className=\"Breadcrumbs__piece\">\n              <label className=\"Breadcrumbs__facet\">\n                <div\n                  style={typeof filter.value !== 'string' ? filter.value : {}}\n                  className=\"Breadcrumbs__color\"\n                >\n                </div>\n                <button\n                  className=\"Breadcrumbs__button\"\n                  onClick={() => onMaterialSelect(filter.value as string)}\n                >\n                </button>\n              </label>\n              <div className=\"Breadcrumbs__slash\">/</div>\n            </div>\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Breadcrumbs","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './components/FacetBlock/FacetBlock.scss';\nimport './components/ProductList/ProductsList.scss';\nimport './components/Filters/Filters.scss';\nimport './components/Breadcrumbs/Breadcrumbs.scss';\nimport 'react-input-range/lib/css/index.css';\n\nimport { getData } from './api';\nimport Filters from './components/Filters/Filters';\nimport ProductsList from './components/ProductList/ProductsList';\nimport Breadcrumbs from './components/Breadcrumbs/Breadcrumbs';\nimport { ColorStyle, ImageStyle, priceValues, selectedFacet } from './types';\n\nfunction App() {\n  const [ items, setItems ] = useState([]);\n  const [ facets, setFacets ] = useState([]);\n  const [ selectedFilters, setSelectedFilters ] = useState<selectedFacet[]>([]);\n  const [ selectedPrice, setSelectedPrice ] = useState('');\n\n  useEffect(() => {\n    getData().then(loadedItems => {\n      setItems(loadedItems.items);\n      setFacets(loadedItems.facets);\n    });\n  }, [])\n\n  const onMaterialSelect = (material: string) => {\n    if (selectedFilters.find(filter => filter.value === material)) {\n      setSelectedFilters([...selectedFilters].filter(filter => filter.value !== material));\n    } else {\n    setSelectedFilters([ ...selectedFilters, { type: 'material', value: material } ])\n    }\n  }\n\n  const onColorSelect = (color: ColorStyle | ImageStyle) => {\n    if (selectedFilters.find(filter => {\n      if (typeof filter.value !== 'string') {\n        return filter.value.id === color.id;\n      }\n    })) {\n      setSelectedFilters([...selectedFilters].filter(filter => {\n        if (typeof filter.value === 'string') {\n          return filter;\n        }\n        if (typeof filter.value !== 'string') {\n          return filter.value.id !== color.id;\n        }\n      }))\n    } else {\n       setSelectedFilters([ ...selectedFilters, { type: 'color', value: color } ]);\n    }\n  }\n\n  const onPriceSelect = (rangeValue: priceValues) => {\n    setSelectedPrice(`$${rangeValue.min} - $${rangeValue.max}`);\n  }\n\n  const onPriceDelete = () => {\n    setSelectedPrice('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__heading\">Search results</h1>\n      <div className=\"Filters\">\n        <div className=\"Filters__section\">filters</div>\n        <div className=\"desktop-breadcrumbs\">\n          <Breadcrumbs onPriceDelete={onPriceDelete} selectedPrice={selectedPrice} onColorSelect={onColorSelect} onMaterialSelect={onMaterialSelect} selectedFilters={selectedFilters}/>\n        </div>\n      </div>\n      <div className=\"App__main\">\n        <Filters onPriceSelect={onPriceSelect} selectedFilters={selectedFilters} onColorSelect={onColorSelect} onMaterialSelect={onMaterialSelect} facets={facets}/>\n        {selectedFilters.length > 0 && <div className=\"mobile-breadcrumbs\">\n          <Breadcrumbs onPriceDelete={onPriceDelete} selectedPrice={selectedPrice} onColorSelect={onColorSelect} onMaterialSelect={onMaterialSelect} selectedFilters={selectedFilters}/>\n        </div>}\n        <ProductsList items={items}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}