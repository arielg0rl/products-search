{"version":3,"sources":["api.ts","components/Breadcrumbs/Breadcrumbs.tsx","components/FacetBlock/FacetBlock.tsx","components/Filters/Filters.tsx","components/ProductList/ProductsList.tsx","App.tsx","index.js"],"names":["request","url","a","fetch","res","ok","Error","json","Breadcrumbs","selectedFilters","FacetBlock","onFilterSelect","colorCodes","facet","sixItems","values","slice","useState","itemsToRender","setItemsToRender","show6Filters","setShow6Filters","showAllFilters","setShowAllFilters","hidden","setHidden","moreOrLess","setMoreOrLess","handleMoreButton","getColor","color","colorCode","find","name","backgroundImage","code","backgroundSize","backgroundColor","border","className","onClick","map","value","type","classNames","count","style","min","max","step","onChange","Filters","facets","setColorCodes","setSelectedFilters","useEffect","then","loadedColors","styleOrName","ProductsList","items","App","setItems","setFacets","loadedItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4729954c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const BASE_URL = 'https://findify-assets.s3.amazonaws.com/test-task';\n\nexport const request = async (url: string) => {\n  const res = await fetch(`${BASE_URL}${url}`);\n  if (!res.ok) {\n    throw new Error(\"Couldn't load data\");\n  }\n  return await res.json();\n};\n\nexport const getData = () => {\n  return request('/test_response.json');\n};\n\nexport const getColorCodes = () => {\n  return request('/test_color_mapping.json');\n};","import React from 'react'\nimport { selectedFacet } from '../../types'\n\ninterface Props {\n  selectedFilters: selectedFacet[],\n}\n\nexport const Breadcrumbs: React.FC<Props> = ({ selectedFilters }) => {\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nexport default Breadcrumbs","import React, { useState } from 'react'\nimport { Facet, ColorStyle, ImageStyle, Color, selectedFacet } from '../../types'\nimport classNames from 'classnames'\n\ninterface Props {\n  facet: Facet;\n  colorCodes: Color[];\n  onFilterSelect: (styleOrName: string | ColorStyle | ImageStyle) => void;\n}\n\nexport const FacetBlock: React.FC<Props> = ({ onFilterSelect, colorCodes, facet }) => {\n  const sixItems = facet.values.slice(0, 6);\n\n  const [ itemsToRender, setItemsToRender ] = useState(sixItems);\n  const [ show6Filters, setShow6Filters ] = useState<boolean>(false);\n  const [ showAllFilters, setShowAllFilters ] = useState<boolean>(false);\n  const [ hidden, setHidden ] = useState<boolean>(true);\n  const [ moreOrLess, setMoreOrLess ] = useState<string>('More');\n\n  const handleOpenButton = (): void => {\n    setHidden(false);\n    setShow6Filters(true);\n  }\n\n  const handleCloseButton = (): void => {\n    setShowAllFilters(false);\n    setHidden(true);\n    setShow6Filters(false);\n    setItemsToRender(sixItems);\n    setMoreOrLess('More');\n  }\n\n  const handleMoreButton = (): void => {\n    if (show6Filters) {\n      setShowAllFilters(true);\n      setShow6Filters(false);\n      setItemsToRender(facet.values);\n      setMoreOrLess('Less');\n    }\n    if (showAllFilters) {\n      setItemsToRender(sixItems);\n      setMoreOrLess('More');\n      setShow6Filters(true);\n      setShowAllFilters(false);\n    }\n  }\n\n  const getColor = (color: string): ColorStyle | ImageStyle => {\n    const colorCode = colorCodes.find(colorCode => color === colorCode.name) || null;\n\n    if (color === \"Multicolor\") {\n      return colorCode ? { backgroundImage: `url(${colorCode.code})`, backgroundSize: \"cover\"} : { backgroundColor: \"white\"}\n    }\n    if (color === \"White\") {\n      return colorCode ? { backgroundColor: colorCode.code, border: \"1px solid black\"} : { backgroundColor: \"white\"}\n    }\n    return colorCode ? { backgroundColor: colorCode.code} : { backgroundColor: \"white\"}\n  }\n\n  return (\n    <div className=\"facet\">\n      <div className=\"facet__wrapper\" key={facet.name}>\n        <div className=\"facet__head\">\n          <div className=\"facet__name\">{facet.name}</div>\n          {hidden ? (\n            <div className=\"facet__button facet__button-open\" onClick={handleOpenButton}></div>\n          ) : (\n          <div className=\"facet__button facet__button-close\" onClick={handleCloseButton}>\n          </div>\n          )}\n        </div>\n\n        {!hidden && (\n          <div className=\"facet__options\">\n            {itemsToRender.map(value => {\n              return (\n                <>\n                {facet.type === \"text\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <div className=\"facet__option-wrapper\">\n                      <div\n                        className={classNames(\"facet__box\", {})}\n                        onClick={() => onFilterSelect(value.value)}\n                      >\n                      </div>\n                      <div className=\"facet__value\">{value.value}</div>\n                    </div>\n                    <div className=\"facet__count\">({value.count})</div>\n                  </div>\n                }\n\n                {facet.type === \"color\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <div className=\"facet__option-wrapper\">\n                      <div\n                        style={getColor(value.value)}\n                        className=\"facet__color\"\n                        onClick={() => onFilterSelect(getColor(value.value))}\n                      >\n                      </div>\n                      <div className=\"facet__value\">{value.value}</div>\n                    </div>\n                    <div className=\"facet__count\">({value.count})</div>\n                  </div>\n                }\n\n                {facet.type === \"range\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                  <section className=\"range-slider\">\n                    <input\n                      type=\"range\"\n                      value={0}\n                      min={0}\n                      max={100}\n                      step={1}\n                      onChange={handleMoreButton}\n                    />\n                    </section>\n                    <button>go</button>\n                </div>}\n                </>\n              )\n            })}\n            <div\n              className=\"facet__more-button\"\n              onClick={handleMoreButton}\n            >\n              <div className={classNames(\"facet__more-button-word\",\n                { \"facet__more-button-word--plus\" : moreOrLess === 'More'}\n              )}>\n                {moreOrLess}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default FacetBlock\n","import React, { useEffect, useState } from 'react'\nimport { getColorCodes } from '../../api'\nimport { ColorStyle, Facet, ImageStyle, selectedFacet } from '../../types'\nimport { Breadcrumbs } from '../Breadcrumbs/Breadcrumbs'\nimport FacetBlock from '../FacetBlock/FacetBlock'\n\n\ninterface Props {\n  facets: Facet[];\n}\n\nexport const Filters: React.FC<Props> = ({ facets }) => {\n  const [ colorCodes, setColorCodes ] = useState([]);\n  const [ selectedFilters, setSelectedFilters ] = useState<selectedFacet[]>([]);\n\n  useEffect(() => {\n    getColorCodes().then(loadedColors => {\n      setColorCodes(loadedColors);\n    })\n  }, [])\n\n  const onFilterSelect = (styleOrName: string | ColorStyle | ImageStyle) => {\n    if (typeof styleOrName === 'string') {\n      setSelectedFilters([ ...selectedFilters, { type: 'material', value: styleOrName } ])\n    }\n    setSelectedFilters([ ...selectedFilters, { type: 'color', value: styleOrName } ])\n  }\n\n  return (\n    <div>\n      <div className=\"Filters\">\n        <div className=\"Filters__section\">filters</div>\n        <Breadcrumbs selectedFilters={selectedFilters}/>\n      </div>\n      {facets.map(facet => <FacetBlock onFilterSelect={onFilterSelect} key={facet.name} colorCodes={colorCodes} facet={facet}/>)}\n    </div>\n  )\n}\n\nexport default Filters\n","import React from 'react'\nimport { Item } from '../../types'\n\ninterface Props {\n  items: Item[];\n}\n\nexport const ProductsList: React.FC<Props> = ({ items }) => {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default ProductsList\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './components/FacetBlock/FacetBlock.scss';\nimport './components/ProductList/ProductsList.scss';\nimport './components/Filters/Filters.scss';\nimport './components/Breadcrumbs/Breadcrumbs.scss';\n\nimport Filters from './components/Filters/Filters';\nimport ProductsList from './components/ProductList/ProductsList';\nimport { getData } from './api';\n\nfunction App() {\n  const [ items, setItems ] = useState([]);\n  const [ facets, setFacets ] = useState([]);\n\n  useEffect(() => {\n    getData().then(loadedItems => {\n      setItems(loadedItems.items);\n      setFacets(loadedItems.facets);\n    });\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__heading\">Search results</h1>\n      <Filters facets={facets}/>\n      <ProductsList items={items}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}