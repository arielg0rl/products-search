{"version":3,"sources":["api.ts","components/Breadcrumbs/Breadcrumbs.tsx","components/FacetBlock/FacetBlock.tsx","components/Filters/Filters.tsx","components/ProductList/ProductsList.tsx","App.tsx","index.js"],"names":["request","url","a","fetch","res","ok","Error","json","Breadcrumbs","onMaterialSelect","selectedFilters","console","log","className","map","filter","type","value","onClick","style","id","FacetBlock","onColorSelect","colorCodes","facet","sixItems","values","slice","useState","itemsToRender","setItemsToRender","show6Filters","setShow6Filters","showAllFilters","setShowAllFilters","hidden","setHidden","moreOrLess","setMoreOrLess","getColor","color","colorCode","find","name","backgroundImage","code","backgroundSize","backgroundColor","border","classNames","count","min","max","step","Filters","facets","setColorCodes","setSelectedFilters","useEffect","then","loadedColors","material","ProductsList","items","App","setItems","setFacets","loadedItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAIaA,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACHC,MAAM,GAAD,OAHD,qDAGC,OAAeF,IADjB,WACfG,EADe,QAEZC,GAFY,sBAGb,IAAIC,MAAM,sBAHG,uBAKRF,EAAIG,OALI,mFAAH,sD,OCKPC,EAA+B,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,gBAE/D,OADAC,QAAQC,IAAIF,GAEV,qBAAKG,UAAU,cAAf,SACGH,EAAgBI,KAAI,SAAAC,GACnB,OACE,sBAAKF,UAAU,6BAAf,UACmB,aAAhBE,EAAOC,MACR,sBAAKH,UAAU,qBAAf,UACE,wBAAOA,UAAU,qBAAjB,UACE,qBAAKA,UAAU,oBAAf,SAAoCE,EAAOE,QAC3C,wBACEJ,UAAU,sBACVK,QAAS,kBAAMT,EAAiBM,EAAOE,aAI3C,qBAAKJ,UAAU,qBAAf,kBAIe,UAAhBE,EAAOC,MACR,sBAAKH,UAAU,qBAAf,UACE,wBAAOA,UAAU,qBAAjB,UACE,qBACEM,MAA+B,kBAAjBJ,EAAOE,MAAqBF,EAAOE,MAAQ,GACzDJ,UAAU,uBAGZ,wBACEA,UAAU,sBACVK,QAAS,kBAAMT,EAAiBM,EAAOE,aAI3C,qBAAKJ,UAAU,qBAAf,oBA7BqE,kBAAjBE,EAAOE,MAAqBF,EAAOE,MAAMG,GAAKL,EAAOE,a,gBCuIxGI,EA1I4B,SAAC,GAA6E,IAA3EX,EAA0E,EAA1EA,gBAAiBY,EAAyD,EAAzDA,cAAeb,EAA0C,EAA1CA,iBAAkBc,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACpGC,EAAWD,EAAME,OAAOC,MAAM,EAAG,GAEvC,EAA4CC,mBAASH,GAArD,mBAAQI,EAAR,KAAuBC,EAAvB,KACA,EAA0CF,oBAAkB,GAA5D,mBAAQG,EAAR,KAAsBC,EAAtB,KACA,EAA8CJ,oBAAkB,GAAhE,mBAAQK,EAAR,KAAwBC,EAAxB,KACA,EAA8BN,oBAAkB,GAAhD,mBAAQO,EAAR,KAAgBC,EAAhB,KACA,EAAsCR,mBAAiB,QAAvD,mBAAQS,EAAR,KAAoBC,EAApB,KA8BMC,EAAW,SAACC,GAChB,IAAMC,EAAYlB,EAAWmB,MAAK,SAAAD,GAAS,OAAID,IAAUC,EAAUE,QAEnE,MAAc,eAAVH,EACK,CAAEpB,GAAIoB,EAAOI,gBAAgB,OAAD,OAASH,EAAUI,KAAnB,KAA4BC,eAAgB,SAEnE,UAAVN,EACK,CAAEpB,GAAIoB,EAAOO,gBAAiBN,EAAUI,KAAMG,OAAQ,kBAExD,CAAE5B,GAAIoB,EAAOO,gBAAiBN,EAAUI,OAGjD,OACE,qBAAKhC,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,wBAAOA,UAAU,cAAjB,UACE,qBAAKA,UAAU,cAAf,SAA8BW,EAAMmB,OACnCR,EACC,wBAAQtB,UAAU,mCAAmCK,QA9CtC,WACvBkB,GAAU,GACVJ,GAAgB,MA8CV,wBAAQnB,UAAU,oCAAoCK,QA3CpC,WACxBgB,GAAkB,GAClBE,GAAU,GACVJ,GAAgB,GAChBF,EAAiBL,GACjBa,EAAc,eA2CRH,GACA,sBAAKtB,UAAU,iBAAf,UACGgB,EAAcf,KAAI,SAAAG,GACjB,OACE,gCACgB,SAAfO,EAAMR,MACL,sBAAKH,UAAU,gBAAf,UACE,wBAAOA,UAAU,wBAAjB,UACE,wBACEA,UAAWoC,IAAW,aAAc,CAAE,uBAAwBvC,EAAgBgC,MAAK,SAAAlB,GAAK,OAAIA,EAAMP,QAAUA,EAAMA,WAClHC,QAAS,WACPT,EAAiBQ,EAAMA,UAI3B,qBAAKJ,UAAU,eAAf,SAA+BI,EAAMA,WAEvC,sBAAKJ,UAAU,eAAf,cAAgCI,EAAMiC,MAAtC,SAXkCjC,EAAMA,OAe5B,UAAfO,EAAMR,MACL,sBAAKH,UAAU,gBAAf,UACE,wBAAOA,UAAU,wBAAjB,UACE,wBACEM,MAAOoB,EAAStB,EAAMA,OACtBJ,UAAWoC,IAAW,eAAgB,CAAE,+BAAgCvC,EAAgBgC,MAAK,SAAAlB,GAC3F,MAA8B,kBAAhBA,EAAMP,MAAsBO,EAAMP,MAAOG,KAAOmB,EAAStB,EAAMA,OAAOG,GAAK,UAE3FF,QAAS,kBAAMI,EAAciB,EAAStB,EAAMA,WAG9C,qBAAKJ,UAAU,eAAf,SAA+BI,EAAMA,WAEvC,sBAAKJ,UAAU,eAAf,cAAgCI,EAAMiC,MAAtC,SAZkCjC,EAAMA,OAgB5B,UAAfO,EAAMR,MACL,sBAAKH,UAAU,gBAAf,UACA,yBAASA,UAAU,eAAnB,SACE,uBACEG,KAAK,QACLC,MAAO,GACPkC,IAAK,EACLC,IAAK,IACLC,KAAM,MAGR,wBACErC,KAAK,SACLH,UAAU,mBAFZ,kBAVkCI,EAAMA,SAnClCA,EAAMA,UAuDpB,qBACEJ,UAAU,qBACVK,QArGa,WACnBa,IACFG,GAAkB,GAClBF,GAAgB,GAChBF,EAAiBN,EAAME,QACvBY,EAAc,SAEZL,IACFH,EAAiBL,GACjBa,EAAc,QACdN,GAAgB,GAChBE,GAAkB,KAwFZ,SAIE,qBAAKrB,UAAWoC,IAAW,0BACzB,CAAE,gCAAiD,SAAfZ,IADtC,SAGGA,WA7E0Bb,EAAMmB,SCJlCW,EAhDyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzC,EAAsC3B,mBAAkB,IAAxD,mBAAQL,EAAR,KAAoBiC,EAApB,KACA,EAAgD5B,mBAA0B,IAA1E,mBAAQlB,EAAR,KAAyB+C,EAAzB,KAEAC,qBAAU,WHEH1D,EAAQ,4BGDG2D,MAAK,SAAAC,GACnBJ,EAAcI,QAEf,IAEH,IAAMnD,EAAmB,SAACoD,GACpBnD,EAAgBgC,MAAK,SAAA3B,GAAM,OAAIA,EAAOE,QAAU4C,KAClDJ,EAAmB,YAAI/C,GAAiBK,QAAO,SAAAA,GAAM,OAAIA,EAAOE,QAAU4C,MAE5EJ,EAAmB,GAAD,mBAAM/C,GAAN,CAAuB,CAAEM,KAAM,WAAYC,MAAO4C,OAIhEvC,EAAgB,SAACkB,GACjB9B,EAAgBgC,MAAK,SAAA3B,GACvB,GAA4B,kBAAjBA,EAAOE,MAChB,OAAOF,EAAOE,MAAMG,KAAOoB,EAAMpB,MAGnCqC,EAAmB,YAAI/C,GAAiBK,QAAO,SAAAA,GAC7C,MAA4B,kBAAjBA,EAAOE,MACTF,EAEmB,kBAAjBA,EAAOE,MACTF,EAAOE,MAAMG,KAAOoB,EAAMpB,QADnC,MAKDqC,EAAmB,GAAD,mBAAM/C,GAAN,CAAuB,CAAEM,KAAM,QAASC,MAAOuB,OAItE,OACE,gCACE,sBAAK3B,UAAU,UAAf,UACE,qBAAKA,UAAU,mBAAf,qBACA,cAAC,EAAD,CAAaS,cAAeA,EAAeb,iBAAkBA,EAAkBC,gBAAiBA,OAEjG6C,EAAOzC,KAAI,SAAAU,GAAK,OAAI,cAAC,EAAD,CAAYd,gBAAiBA,EAAiBY,cAAeA,EAAeb,iBAAkBA,EAAmCc,WAAYA,EAAYC,MAAOA,GAA3CA,EAAMmB,aCvCvImB,EAR8B,SAAC,GAAc,EAAZC,MAC9C,OACE,yBCsBWC,MApBf,WACE,MAA4BpC,mBAAS,IAArC,mBAAQmC,EAAR,KAAeE,EAAf,KACA,EAA8BrC,mBAAS,IAAvC,mBAAQ2B,EAAR,KAAgBW,EAAhB,KASA,OAPAR,qBAAU,WLFH1D,EAAQ,uBKGH2D,MAAK,SAAAQ,GACbF,EAASE,EAAYJ,OACrBG,EAAUC,EAAYZ,aAEvB,IAGD,sBAAK1C,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,4BACA,cAAC,EAAD,CAAS0C,OAAQA,IACjB,cAAC,EAAD,CAAcQ,MAAOA,QCtB3BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c36c1c20.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const BASE_URL = 'https://findify-assets.s3.amazonaws.com/test-task';\n\nexport const request = async (url: string) => {\n  const res = await fetch(`${BASE_URL}${url}`);\n  if (!res.ok) {\n    throw new Error(\"Couldn't load data\");\n  }\n  return await res.json();\n};\n\nexport const getData = () => {\n  return request('/test_response.json');\n};\n\nexport const getColorCodes = () => {\n  return request('/test_color_mapping.json');\n};","import React from 'react'\nimport { ColorStyle, ImageStyle, selectedFacet } from '../../types'\n\ninterface Props {\n  selectedFilters: selectedFacet[],\n  onMaterialSelect: (material: string) => void;\n  onColorSelect: (color: ColorStyle | ImageStyle) => void;\n}\n\nexport const Breadcrumbs: React.FC<Props> = ({ onMaterialSelect, selectedFilters }) => {\n  console.log(selectedFilters)\n  return (\n    <div className=\"Breadcrumbs\">\n      {selectedFilters.map(filter => {\n        return (\n          <div className=\"Breadcrumbs__piece-wrapper\" key={typeof filter.value !== 'string' ? filter.value.id : filter.value}>\n            {filter.type === 'material' &&\n            <div className=\"Breadcrumbs__piece\">\n              <label className=\"Breadcrumbs__facet\">\n                <div className=\"Breadcrumbs__name\">{filter.value}</div>\n                <button\n                  className=\"Breadcrumbs__button\"\n                  onClick={() => onMaterialSelect(filter.value as string)}\n                >\n                </button>\n              </label>\n              <div className=\"Breadcrumbs__slash\">/</div>\n            </div>\n\n            }\n            {filter.type === 'color' &&\n            <div className=\"Breadcrumbs__piece\">\n              <label className=\"Breadcrumbs__facet\">\n                <div\n                  style={typeof filter.value !== 'string' ? filter.value : {}}\n                  className=\"Breadcrumbs__color\"\n                >\n                </div>\n                <button\n                  className=\"Breadcrumbs__button\"\n                  onClick={() => onMaterialSelect(filter.value as string)}\n                >\n                </button>\n              </label>\n              <div className=\"Breadcrumbs__slash\">/</div>\n            </div>\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Breadcrumbs","import React, { useState } from 'react'\nimport { Facet, ColorStyle, ImageStyle, Color, selectedFacet } from '../../types'\nimport classNames from 'classnames'\n\ninterface Props {\n  facet: Facet;\n  colorCodes: Color[];\n  onMaterialSelect: (material: string) => void;\n  onColorSelect: (color: ColorStyle | ImageStyle) => void;\n  selectedFilters: selectedFacet[];\n}\n\nexport const FacetBlock: React.FC<Props> = ({ selectedFilters, onColorSelect, onMaterialSelect, colorCodes, facet }) => {\n  const sixItems = facet.values.slice(0, 6);\n\n  const [ itemsToRender, setItemsToRender ] = useState(sixItems);\n  const [ show6Filters, setShow6Filters ] = useState<boolean>(false);\n  const [ showAllFilters, setShowAllFilters ] = useState<boolean>(false);\n  const [ hidden, setHidden ] = useState<boolean>(true);\n  const [ moreOrLess, setMoreOrLess ] = useState<string>('More');\n\n  const handleOpenButton = (): void => {\n    setHidden(false);\n    setShow6Filters(true);\n  }\n\n  const handleCloseButton = (): void => {\n    setShowAllFilters(false);\n    setHidden(true);\n    setShow6Filters(false);\n    setItemsToRender(sixItems);\n    setMoreOrLess('More');\n  }\n\n  const handleMoreButton = (): void => {\n    if (show6Filters) {\n      setShowAllFilters(true);\n      setShow6Filters(false);\n      setItemsToRender(facet.values);\n      setMoreOrLess('Less');\n    }\n    if (showAllFilters) {\n      setItemsToRender(sixItems);\n      setMoreOrLess('More');\n      setShow6Filters(true);\n      setShowAllFilters(false);\n    }\n  }\n\n  const getColor = (color: string): ColorStyle | ImageStyle => {\n    const colorCode = colorCodes.find(colorCode => color === colorCode.name) as Color;\n\n    if (color === \"Multicolor\") {\n      return { id: color, backgroundImage: `url(${colorCode.code})`, backgroundSize: \"cover\"};\n    }\n    if (color === \"White\") {\n      return { id: color, backgroundColor: colorCode.code, border: \"1px solid grey\"};\n    }\n    return { id: color, backgroundColor: colorCode.code};\n  }\n\n  return (\n    <div className=\"facet\">\n      <div className=\"facet__wrapper\" key={facet.name}>\n        <label className=\"facet__head\">\n          <div className=\"facet__name\">{facet.name}</div>\n          {hidden ? (\n            <button className=\"facet__button facet__button-open\" onClick={handleOpenButton}></button>\n          ) : (\n          <button className=\"facet__button facet__button-close\" onClick={handleCloseButton}>\n          </button>\n          )}\n        </label>\n\n        {!hidden && (\n          <div className=\"facet__options\">\n            {itemsToRender.map(value => {\n              return (\n                <div key={value.value}>\n                {facet.type === \"text\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <label className=\"facet__option-wrapper\">\n                      <button\n                        className={classNames(\"facet__box\", { 'facet__box--selected': selectedFilters.find(facet => facet.value === value.value)})}\n                        onClick={() => {\n                          onMaterialSelect(value.value);\n                        }}\n                      >\n                      </button>\n                      <div className=\"facet__value\">{value.value}</div>\n                    </label>\n                    <div className=\"facet__count\">({value.count})</div>\n                  </div>\n                }\n\n                {facet.type === \"color\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                    <label className=\"facet__option-wrapper\">\n                      <button\n                        style={getColor(value.value)}\n                        className={classNames(\"facet__color\", { 'facet__color--selected-color': selectedFilters.find(facet => {\n                          return typeof facet.value !== 'string' ? (facet.value).id === getColor(value.value).id : null;\n                        })})}\n                        onClick={() => onColorSelect(getColor(value.value))}\n                      >\n                      </button>\n                      <div className=\"facet__value\">{value.value}</div>\n                    </label>\n                    <div className=\"facet__count\">({value.count})</div>\n                  </div>\n                }\n\n                {facet.type === \"range\" &&\n                  <div className=\"facet__option\" key={value.value}>\n                  <section className=\"range-slider\">\n                    <input\n                      type=\"range\"\n                      value={30}\n                      min={0}\n                      max={100}\n                      step={1}\n                    />\n                    </section>\n                    <button\n                      type=\"submit\"\n                      className=\"facet__go-button\"\n                    >\n                      go\n                    </button>\n                </div>}\n                </div>\n              )\n            })}\n            <div\n              className=\"facet__more-button\"\n              onClick={handleMoreButton}\n            >\n              <div className={classNames(\"facet__more-button-word\",\n                { \"facet__more-button-word--plus\" : moreOrLess === 'More'}\n              )}>\n                {moreOrLess}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default FacetBlock\n\n","import React, { useEffect, useState } from 'react'\nimport { getColorCodes } from '../../api'\nimport { Color, ColorStyle, Facet, ImageStyle, selectedFacet } from '../../types'\nimport { Breadcrumbs } from '../Breadcrumbs/Breadcrumbs'\nimport FacetBlock from '../FacetBlock/FacetBlock'\n\n\ninterface Props {\n  facets: Facet[];\n}\n\nexport const Filters: React.FC<Props> = ({ facets }) => {\n  const [ colorCodes, setColorCodes ] = useState<Color[]>([]);\n  const [ selectedFilters, setSelectedFilters ] = useState<selectedFacet[]>([]);\n\n  useEffect(() => {\n    getColorCodes().then(loadedColors => {\n      setColorCodes(loadedColors);\n    })\n  }, [])\n\n  const onMaterialSelect = (material: string) => {\n    if (selectedFilters.find(filter => filter.value === material)) {\n      setSelectedFilters([...selectedFilters].filter(filter => filter.value !== material));\n    } else {\n    setSelectedFilters([ ...selectedFilters, { type: 'material', value: material } ])\n    }\n  }\n\n  const onColorSelect = (color: ColorStyle | ImageStyle) => {\n    if (selectedFilters.find(filter => {\n      if (typeof filter.value !== 'string') {\n        return filter.value.id === color.id;\n      }\n    })) {\n      setSelectedFilters([...selectedFilters].filter(filter => {\n        if (typeof filter.value === 'string') {\n          return filter;\n        }\n        if (typeof filter.value !== 'string') {\n          return filter.value.id !== color.id;\n        }\n      }))\n    } else {\n       setSelectedFilters([ ...selectedFilters, { type: 'color', value: color } ]);\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"Filters\">\n        <div className=\"Filters__section\">filters</div>\n        <Breadcrumbs onColorSelect={onColorSelect} onMaterialSelect={onMaterialSelect} selectedFilters={selectedFilters}/>\n      </div>\n      {facets.map(facet => <FacetBlock selectedFilters={selectedFilters} onColorSelect={onColorSelect} onMaterialSelect={onMaterialSelect} key={facet.name} colorCodes={colorCodes} facet={facet}/>)}\n    </div>\n  )\n}\n\nexport default Filters\n","import React from 'react'\nimport { Item } from '../../types'\n\ninterface Props {\n  items: Item[];\n}\n\nexport const ProductsList: React.FC<Props> = ({ items }) => {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default ProductsList\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './components/FacetBlock/FacetBlock.scss';\nimport './components/ProductList/ProductsList.scss';\nimport './components/Filters/Filters.scss';\nimport './components/Breadcrumbs/Breadcrumbs.scss';\n\nimport Filters from './components/Filters/Filters';\nimport ProductsList from './components/ProductList/ProductsList';\nimport { getData } from './api';\n\nfunction App() {\n  const [ items, setItems ] = useState([]);\n  const [ facets, setFacets ] = useState([]);\n\n  useEffect(() => {\n    getData().then(loadedItems => {\n      setItems(loadedItems.items);\n      setFacets(loadedItems.facets);\n    });\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__heading\">Search results</h1>\n      <Filters facets={facets}/>\n      <ProductsList items={items}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}